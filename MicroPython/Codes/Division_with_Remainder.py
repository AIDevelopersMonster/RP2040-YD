from machine import Pin
import neopixel
import time
import random
import sys

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ (GPIO 24) –∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ WS2812 (GPIO 23)
button = Pin(24, Pin.IN, Pin.PULL_UP)
num_leds = 1
np = neopixel.NeoPixel(Pin(23), num_leds)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤
def show_color(color):
    for i in range(num_leds):
        np[i] = color
    np.write()

# –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–µ–ª–µ–Ω–∏—è —Å –ø—Å–µ–≤–¥–æ–≥—Ä–∞—Ñ–∏–∫–æ–π
def explain_division():
    print("                                        ")
    print(" üì¢ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï:                        ")
    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("‚îÇ –î–µ–ª–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è     ‚îÇ")
    print("‚îÇ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–¥–Ω–æ —á–∏—Å–ª–æ  ‚îÇ")
    print("‚îÇ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤ –¥—Ä—É–≥–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä:      ‚îÇ")
    print("‚îÇ                                      ‚îÇ")
    print("‚îÇ  6 √∑ 2 = 3                          ‚îÇ")
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n")
    print("–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–¥–µ–ª–∏—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞!\n")

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–∞
def generate_problem():
    b = random.randint(1, 9)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –¥–µ–ª–∏—Ç–µ–ª—å (–æ—Ç 1 –¥–æ 9)
    a = b * random.randint(1, 9)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —á–∏—Å–ª–∏—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∏—Ç—Å—è –Ω–∞ b
    correct_answer = a // b  # –û—Ç–≤–µ—Ç –Ω–∞ –¥–µ–ª–µ–Ω–∏–µ (—Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ)
    return a, b, correct_answer

# –§—É–Ω–∫—Ü–∏—è –ø–æ—è—Å–Ω–µ–Ω–∏—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
def explain_problem(a, b, correct_answer):
    print(f"–ü—Ä–∏–º–µ—Ä {a} √∑ {b}:")
    print(f"–î–µ–ª–∏–º —á–∏—Å–ª–æ {a} –Ω–∞ {b}.")
    print(f"–ó–∞–¥–∞—á–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ {b} –≤—Ö–æ–¥–∏—Ç –≤ —á–∏—Å–ª–æ {a}.")
    
    # –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –≤—ã—á–∏—Ç–∞–Ω–∏–µ
    quotient = 0
    remainder = a
    print(f"–ú—ã –±—É–¥–µ–º –≤—ã—á–∏—Ç–∞—Ç—å {b} –∏–∑ {a} –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.")
    while remainder >= b:
        remainder -= b
        quotient += 1
    print(f"–ü–æ—Å–ª–µ {quotient} –≤—ã—á–∏—Ç–∞–Ω–∏–π –æ—Å—Ç–∞—Ç–æ–∫ —Ä–∞–≤–µ–Ω {remainder}.")
    print(f"–ò—Ç–∞–∫, {a} √∑ {b} = {quotient} —Å –æ—Å—Ç–∞—Ç–∫–æ–º {remainder}.")
    
    if remainder == 0:
        print(f"–û—Ç–≤–µ—Ç: {quotient}, –æ—Å—Ç–∞—Ç–∫–∞ –Ω–µ—Ç.")
    else:
        print(f"–û—Ç–≤–µ—Ç: {quotient} —Å –æ—Å—Ç–∞—Ç–∫–æ–º {remainder}.")

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
def check_answer():
    while True:
        a, b, correct_answer = generate_problem()
        explain_problem(a, b, correct_answer)  # –ü–æ—è—Å–Ω—è–µ–º —Ä–µ—à–µ–Ω–∏–µ
        print(f"\n–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: {a} √∑ {b} = ?")
        
        try:
            user_answer = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç: "))
        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
            continue

        print("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞...")
        
        while button.value():  # –ñ–¥—ë–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            time.sleep(0.1)

        if user_answer == correct_answer:
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            show_color((0, 255, 0))  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")
            show_color((255, 0, 0))  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
        
        time.sleep(1)  # –î–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        show_color((0, 0, 0))  # –í—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã
        print("\n–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä...\n")

# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
explain_division()  # –û–±—ä—è—Å–Ω—è–µ–º –¥–µ–ª–µ–Ω–∏–µ
check_answer()  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã

try:
    explain_problem()  # –û–±—ä—è—Å–Ω—è–µ–º –¥–µ–ª–µ–Ω–∏–µ
    check_answer()  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
except KeyboardInterrupt:
    print("\nüö™ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –î–æ –≤—Å—Ç—Ä–µ—á–∏!")
    show_color((0, 0, 0))  # –í—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã
    sys.exit(0)  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã—Ö–æ–¥ –±–µ–∑ –æ—à–∏–±–∫–∏