from machine import Pin
import neopixel
import time
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ (GPIO 24) –∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ WS2812 (GPIO 23)
button = Pin(24, Pin.IN, Pin.PULL_UP)
num_leds = 1
np = neopixel.NeoPixel(Pin(23), num_leds)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Å–≤–µ—Ç–æ–¥–∏–æ–¥–∞ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
def fade_out():
    for i in range(255, -1, -5):  # –ü–ª–∞–≤–Ω–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ
        np[0] = (i, 0, 0)
        np.write()
        time.sleep(0.02)
    np[0] = (0, 0, 0)
    np.write()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤
def show_color(color):
   
    np[0] = color
    np.write()

# –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤—ã—á–∏—Ç–∞–Ω–∏—è —Å –ø—Å–µ–≤–¥–æ–≥—Ä–∞—Ñ–∏–∫–æ–π
def explain_subtraction():
    print("                                        ")
    print(" üì¢ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï:                        ")
    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("‚îÇ –í—ã—á–∏—Ç–∞–Ω–∏–µ ‚Äî —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è         ‚îÇ")
    print("‚îÇ –æ–ø–µ—Ä–∞—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏–∑ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞    ‚îÇ")
    print("‚îÇ –≤—ã—á–∏—Ç–∞–µ—Ç—Å—è –¥—Ä—É–≥–æ–µ. –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è‚îÇ")
    print("‚îÇ —Ä–∞–∑–Ω–æ—Å—Ç—å—é. –ù–∞–ø—Ä–∏–º–µ—Ä:                   ‚îÇ")
    print("‚îÇ                                        ‚îÇ")
    print("‚îÇ  7 - 3 = 4                             ‚îÇ")
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n")
    print("–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º –≤—ã—á–µ—Å—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞!\n")

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–∞
def generate_problem():
    a = random.randint(5, 9)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 5 –¥–æ 9
    b = random.randint(1, a)  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ b –Ω–µ –±–æ–ª—å—à–µ a
    correct_answer = a - b
    return a, b, correct_answer

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
def check_answer():
    while True:
        a, b, correct_answer = generate_problem()
        print(f"\n–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: {a} - {b} = ?")
        
        try:
            user_answer = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç: "))
        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
            continue

        print("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞...")
        
        while button.value():  # –ñ–¥—ë–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
            time.sleep(0.1)
        
        if user_answer == correct_answer:
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            show_color((0, 255, 0))  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")
            show_color((255, 0, 0))  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
        
        time.sleep(1)  # –î–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        show_color((0, 0, 0))  # –í—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã
        print("\n–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä...\n")

# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
try:
    explain_subtraction()  # –û–±—ä—è—Å–Ω—è–µ–º –≤—ã—á–∏—Ç–∞–Ω–∏–µ
    check_answer()  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
except KeyboardInterrupt:
        print("\n\nüöÄ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
        fade_out()
        print("üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!\n")
