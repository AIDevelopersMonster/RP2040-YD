from machine import Pin
import neopixel
import time
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ (GPIO 24) –∏ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤ WS2812 (GPIO 23)
button = Pin(24, Pin.IN, Pin.PULL_UP)
num_leds = 1
np = neopixel.NeoPixel(Pin(23), num_leds)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–≤–µ—Ç–æ–¥–∏–æ–¥–æ–≤
def show_color(color):
    for i in range(num_leds):
        np[i] = color
    np.write()

# –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Å–ª–æ–∂–µ–Ω–∏—è –∏ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
def explain_addition():
    print("                                        ")
    print(" üì¢ –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï:                        ")
    print("‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê")
    print("‚îÇ –°–ª–æ–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è        ‚îÇ")
    print("‚îÇ –æ–ø–µ—Ä–∞—Ü–∏—è, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∞—è –¥–≤–∞ —á–∏—Å–ª–∞     ‚îÇ")
    print("‚îÇ –∏ –¥–∞—é—â–∞—è –∏—Ö —Å—É–º–º—É. –ù–∞–ø—Ä–∏–º–µ—Ä:         ‚îÇ")
    print("‚îÇ                                      ‚îÇ")
    print("‚îÇ  2 + 3 = 5                           ‚îÇ")
    print("‚îÇ                                      ‚îÇ")
    print("‚îÇ üîπ –ß–∏—Å–ª–æ 0 ‚Äî –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç.    ‚îÇ")
    print("‚îÇ –ü—Ä–∏ —Å–ª–æ–∂–µ–Ω–∏–∏ —Å –Ω–∏–º —á–∏—Å–ª–æ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è:‚îÇ")
    print("‚îÇ  7 + 0 = 7                           ‚îÇ")
    print("‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n")
    print("–¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–µ–º —Å–ª–æ–∂–∏—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞!\n")

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ—Ä–∞
def generate_problem():
    a = random.randint(0, 9)  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞, –≤–∫–ª—é—á–∞—è 0
    b = 0
    correct_answer = a + b
    return a, b, correct_answer

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π
def check_answer():
    try:
        while True:
            a, b, correct_answer = generate_problem()
            print(f"\n–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: {a} + {b} = ?")

            try:
                user_answer = int(input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç: "))
            except ValueError:
                print("‚ùå –û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
                continue

            print("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≤–µ—Ç–∞...")

            while button.value():  # –ñ–¥—ë–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
                time.sleep(0.1)

            if user_answer == correct_answer:
                print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
                show_color((0, 255, 0))  # –ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞! –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")
                show_color((255, 0, 0))  # –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç

            if a == 0 or b == 0:
                print(f"‚ÑπÔ∏è {a} + {b} = {correct_answer}, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø—Ä–∏ —Å–ª–æ–∂–µ–Ω–∏–∏ —Å 0 —á–∏—Å–ª–æ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è.")

            time.sleep(1)  # –î–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            show_color((0, 0, 0))  # –í—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã
            print("\n–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä...\n")

    except KeyboardInterrupt:
        print("\nüö™ –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        show_color((0, 0, 0))  # –í—ã–∫–ª—é—á–∞–µ–º —Å–≤–µ—Ç–æ–¥–∏–æ–¥—ã –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º

# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
explain_addition()  # –û–±—ä—è—Å–Ω—è–µ–º —Å–ª–æ–∂–µ–Ω–∏–µ
check_answer()  # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
